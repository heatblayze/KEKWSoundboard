<Application x:Class="KEKWSoundboard.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:KEKWSoundboard"
             xmlns:components="clr-namespace:KEKWSoundboard.Components"
             StartupUri="/Windows/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes/DarkTheme.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/Slider.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/TextBox.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <FontFamily x:Key="Cabin">pack://application:,,,/Resources/Fonts/#Cabin</FontFamily>

            <!--Grid-->
            <Style TargetType="Grid" x:Key="NormalGrid">
                <Setter Property="Background" Value="{StaticResource NormalBackground}"/>
            </Style>

            <!--Border-->
            <Style TargetType="Border" x:Key="NormalSeparator">
                <Setter Property="BorderBrush" Value="{StaticResource Separator}"/>
                <Setter Property="Background" Value="{StaticResource Separator}"/>
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="CornerRadius" Value="20" />
            </Style>

            <Style TargetType="Border" x:Key="EntityBorder">
                <Setter Property="BorderBrush" Value="{StaticResource EntityBorderBrush}"/>
                <Setter Property="BorderThickness" Value="6" />
                <Setter Property="CornerRadius" Value="5" />
            </Style>

            <!--Buttons-->
            <Style TargetType="Button" x:Key="NormalButton">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
                <Setter Property="Foreground" Value="{StaticResource NormalTextBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource Cabin}"/>
                <Setter Property="FontSize" Value="15"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="primaryGrid">
                                <Border BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="3" Background="{TemplateBinding Background}" OpacityMask="{TemplateBinding OpacityMask}">
                                    <Label Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource ButtonHighlightBackground}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{StaticResource ButtonPressBackground}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Button" x:Key="DisabledButton" BasedOn="{StaticResource NormalButton}">
                <Setter Property="Background" Value="{StaticResource ButtonDisabledBackground}"/>
            </Style>

            <Style TargetType="Button" x:Key="OverlayButton" BasedOn="{StaticResource NormalButton}">
                <Setter Property="Background" Value="Transparent"/>
            </Style>

            <!--ImageToggle-->
            <Style TargetType="components:ImageToggle" x:Key="ImageToggle">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Foreground" Value="{StaticResource NormalTextBrush}"/>
                
                <Setter Property="NormalBrush" Value="{StaticResource ButtonBackground}"/>
                <Setter Property="CheckedBrush" Value="{StaticResource ImageToggleChecked}"/>
                <Setter Property="HighlightBrush" Value="{StaticResource ButtonHighlightBackground}"/>
                <Setter Property="PressBrush" Value="{StaticResource ButtonPressBackground}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="components:ImageToggle">
                            <Grid x:Name="primaryGrid" Background="{TemplateBinding Background}" OpacityMask="{TemplateBinding OpacityMask}">
                                <Image Source="{TemplateBinding Source}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="components:ImageToggle" x:Key="SeamlessImageToggle" BasedOn="{StaticResource ImageToggle}">
                <Setter Property="NormalBrush" Value="Transparent"/>
            </Style>

            <!--TextBlock-->
            <Style TargetType="TextBlock" x:Key="NormalTextBlock">
                <Setter Property="Foreground" Value="{StaticResource NormalTextBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource Cabin}"/>
                <Setter Property="FontWeight" Value="Regular"/>
            </Style>

            <!--Label-->
            <Style TargetType="Label" x:Key="NormalLabel">
                <Setter Property="Foreground" Value="{StaticResource NormalTextBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource Cabin}"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Padding" Value="2,2,2,2" />
                <Setter Property="FontSize" Value="15"/>
            </Style>

            <!--Base style for title bar buttons-->
            <Style x:Key="CaptionButtonStyle" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="LayoutRoot" Background="Transparent" Width="44" Height="30">
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" 
                                   Foreground="{StaticResource CaptionNormalText}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="LayoutRoot" Property="Background" Value="{StaticResource CaptionHighlightBackground}"/>
                                    <Setter TargetName="txt" Property="Foreground" Value="{StaticResource CaptionHighlightText}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Close-->
            <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                <Setter Property="Content" Value="&#xE106;"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="LayoutRoot" Background="Transparent" Width="44" Height="30">
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" 
                                   Foreground="{StaticResource CaptionNormalText}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="LayoutRoot" Property="Background" Value="#FFF13939"/>
                                    <Setter TargetName="txt" Property="Foreground" Value="#FFFFFF"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Minimize-->
            <Style x:Key="MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                <Setter Property="Content" Value="&#xE949;"/>
            </Style>

            <!--Maximize-->
            <Style x:Key="MaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                <Setter Property="Content" Value="&#xE739;"/>
            </Style>

            <!--Restore-->
            <Style x:Key="RestoreButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                <Setter Property="Content" Value="&#xE923;"/>
            </Style>


            <!--MenuItem Style-->
            <Style TargetType="Menu" x:Key="NormalMenu">
                <Setter Property="Foreground" Value="{StaticResource NormalTextBrush}"/>
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="FontFamily" Value="{StaticResource Cabin}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Menu">
                            <Border x:Name="MainMenu">
                                <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--MenuItem Template-->
            <ControlTemplate x:Key="NormalMenuItem" TargetType="MenuItem">
                <Border x:Name="templateRoot" 
                Background="{StaticResource NormalBackground}"
                BorderBrush="{x:Null}"
                BorderThickness="1"
                SnapsToDevicePixels="True">
                    <Grid VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                            <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource MenuItemBorder}" BorderThickness="1" Background="{StaticResource NormalBackground}" Padding="2">
                                <ScrollViewer x:Name="SubMenuScrollViewer" FontFamily="{StaticResource Cabin}" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSubmenuOpen" Value="True">
                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItemBorder}"/>
                    </Trigger>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                        <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                    </Trigger>
                    <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                        <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                        <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>
